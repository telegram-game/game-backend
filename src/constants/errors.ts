export enum ERROR_CODES {
  VPN_SERVER_NOT_FOUND = 'VPN_SERVER_NOT_FOUND',
  INVALID_REQUEST = 'INVALID_REQUEST',
  INVALID_PARAMS = 'INVALID_PARAMS',
  PEER_PROFILE_NOT_FOUND = 'PEER_PROFILE_NOT_FOUND',
  WG_PEER_PROFILE_NOT_FOUND = 'WG_PEER_PROFILE_NOT_FOUND',
  BLACKLIST_NOT_FOUND = 'BLACKLIST_NOT_FOUND',
  WG_SERVER_TIMEOUT = 'WG_SERVER_TIMEOUT',
  WG_SERVER_INTERNAL_ERROR = 'WG_SERVER_INTERNAL_ERROR',

  USER_BLACKLISTED = 'USER_BLACKLISTED',
  DEVICE_BLACKLISTED = 'DEVICE_BLACKLISTED',

  INVALID_TOKEN = 'INVALID_TOKEN',
  CONFIGURATION_NOT_FOUND = 'CONFIGURATION_NOT_FOUND',

  NOT_FOUND = 'NOT_FOUND',
  FORBIDDEN = 'FORBIDDEN',
  UNAUTHORIZED = 'UNAUTHORIZED',
  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',

  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',
  SIGNATURE_VALIDATION_FAILED = 'SIGNATURE_VALIDATION_FAILED',
}

export const ERROR_MESSAGES = {
  [ERROR_CODES.VPN_SERVER_NOT_FOUND]: 'VPN_SERVER_NOT_FOUND',
  [ERROR_CODES.INVALID_REQUEST]: 'INVALID_REQUEST',
  [ERROR_CODES.PEER_PROFILE_NOT_FOUND]: 'PEER_PROFILE_NOT_FOUND',
  [ERROR_CODES.WG_PEER_PROFILE_NOT_FOUND]: 'WG_PEER_PROFILE_NOT_FOUND',
  [ERROR_CODES.WG_SERVER_TIMEOUT]: 'WG_SERVER_TIMEOUT',
  [ERROR_CODES.USER_BLACKLISTED]: 'USER_BLACKLISTED',
  [ERROR_CODES.DEVICE_BLACKLISTED]: 'DEVICE_BLACKLISTED',
  [ERROR_CODES.INVALID_TOKEN]: 'INVALID_TOKEN',
  [ERROR_CODES.INVALID_PARAMS]: 'INVALID_PARAMS',
  [ERROR_CODES.BLACKLIST_NOT_FOUND]: 'BLACKLIST_NOT_FOUND',
  [ERROR_CODES.CONFIGURATION_NOT_FOUND]: 'CONFIGURATION_NOT_FOUND',
  [ERROR_CODES.NOT_FOUND]: 'NOT_FOUND',
  [ERROR_CODES.FORBIDDEN]: 'FORBIDDEN',
  [ERROR_CODES.UNAUTHORIZED]: 'UNAUTHORIZED',
  [ERROR_CODES.RATE_LIMIT_EXCEEDED]: 'RATE_LIMIT_EXCEEDED',
  [ERROR_CODES.SERVICE_UNAVAILABLE]: 'SERVICE_UNAVAILABLE',
  [ERROR_CODES.SIGNATURE_VALIDATION_FAILED]: 'SIGNATURE_VALIDATION_FAILED',
};

export function getErorrMessage(errorCode: ERROR_CODES): string {
  return ERROR_MESSAGES[errorCode];
}
